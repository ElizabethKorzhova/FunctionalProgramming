(let ((dict (list "ing" "es" "ed" "s" "d" "t")))
    (define out1 (open-output-file "/myfiles/input.txt"))
    (define (remove-ending-from-word word)
        (define (endings-loop i)
            (if (= i (length dict))
                word
                (if (and (> (string-length word) (string-length (list-ref dict i))) (string=? (list-ref dict i) (substring word (- (string-length word) (string-length (list-ref dict i))) (string-length word))))
                    (substring word 0 (- (string-length word) (string-length (list-ref dict i))))
                    (endings-loop (+ 1 i))
                )
            )
        )
        (endings-loop 0)
    )
    (define in (open-input-file "/myfiles/input.txt"))
    (define out (open-output-file "/myfiles/output.txt"))
    (define (read-file word char)
        (if (eof-object? char)
            (begin
                (display word)
                (display (remove-ending-from-word word) out)
                (display "\nEnd Of File")
            )
            (begin
                (display word)
                (display char)
                (display (remove-ending-from-word word) out)
                (display char out)
                (read-file (symbol->string (read in)) (read-char in))
            )
        )
    )
    (display "Most individuals don't think about numbers, or numerical representations of quantity, but they play a major\npart in everyday life. To be sure, numbers determine the time individuals will wake up in the morning, how\nmuch money employees earn per hour, what day of the year it is, and much, much more. Additionally, numbers impact everyday living on a much smaller scale. In the grocery store, for instance,\nnumbers determine products' prices, the amount of a product available for purchase, how much money\nwill need to be paid for products, and a whole lot else." out1)
    (close-output-port out1)
    (read-file (symbol->string (read in)) (read-char in))
    (close-input-port in)
    (close-output-port out)
)