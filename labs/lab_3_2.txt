(define (f x) (/ (cos x) (sqrt x))) ; визначаємо f(x)

(define (simpson_method x1 x2) ; визначаємо функцію, яка шукає визначений інтеграл за допомогою метода Сімпсона
    (let ((h (/ (- x2 x1) 2))) ; визначаємо h для формули
        (* (/ h 3) (+ (f x1) (* 4 (f (+ x1 h))) (f (+ x1 (* 2 h))))) ; використовуємо формулу з метода Сімпсона
    )
)

(define (trapezoid_method x1 x2 n) ; визначаємо функцію, яка шукає визначений інтеграл за допомогою метода трапецій
    (define (sum acc index) ; визначаємо допоміжну функцію, яка шукає суму
        (if (> index (- n 1)) ; якщо індекс більше індекса останньої точки (х2)
            acc ; повертаємо акумулятор та виходимо з функції
            (sum ; інакше, викликаємо рекурсивно пошук суми, передавши нові параметри
                 (+ acc (f (+ x1 (* index (/ (- x2 x1) n))))) ; додаємо до акумулятора значення функції в поточній точці
                 (+ index 1)) ; збільшуємо індекс на одиницю
        )
    )
    (* (/ (- x2 x1) (* 2 n)) (* 2 (sum (+ (f x1) (f x2)) 1))) ; використовуємо формулу для знаходження визначенного інтегралу за допомогою метода трапецій
)

(display "Реальне значення визначенного інтегралу: 1.25642566445695")
(newline)
(display "Визначений інтеграл за допомогою метода Сімпсона: ")
(display (simpson_method 0.1 2))
(newline)
(display "Визначений інтеграл за допомогою метода трапецій: ")
(display (trapezoid_method 0.1 2 10000))
